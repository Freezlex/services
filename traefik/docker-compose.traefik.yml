version: '3.8'

services:
  traefik:
    container_name: traefik
    image: 'traefik:${TRAEFIK_IMAGE_VERSION:-latest}'
    command:
      # Provider
      - '--providers.docker'
      - '--providers.docker.exposedbydefault=${TRAEFIK_EXPOSED_BY_DEFAULT:-false}'
      - '--providers.docker.network=proxy-network'

      # Entrypoints
      - '--entrypoints.web.address=:${TRAEFIK_WEB_ENTRYPOINT:-80}'
      - '--entrypoints.websecure.address=:${TRAEFIK_WEBSECURE_ENTRYPOINT:-443}'
      - '--entrypoints.mqtt.address=:${TRAEFIK_MQTT_ENTRYPOINT:-1883}'
      - '--entrypoints.websocket.address=:${TRAEFIK_WEBSOCKET_ENTRYPOINT:-9001}'
      # - '--entrypoints.mc.address=:${TRAEFIK_MC_ENTRYPOINT:-25565}'

      # Let's Encrypt
      - "--certificatesresolvers.letsencryptresolver.acme.dnschallenge=true"
      - "--certificatesresolvers.letsencryptresolver.acme.dnschallenge.provider=googledomains"
      - "--certificatesresolvers.letsencryptresolver.acme.email=${ROOT_EMAIL:-changeme@changeme.org}"
      - "--certificatesresolvers.letsencryptresolver.acme.storage=/letsencrypt/acme.json"
      # Prod : acme-v02.api.letsencrypt.org/directory
      # Staging : acme-staging-v02.api.letsencrypt.org/directory
      - '--certificatesresolvers.letsencryptresolver.acme.caserver=https://acme-v02.api.letsencrypt.org/directory'

      # HTTP -> HTTPS
      - '--entrypoints.web.http.redirections.entrypoint.to=websecure'
      - '--entrypoints.web.http.redirections.entryPoint.scheme=https'

      # HTTP/3
      - '--experimental.http3=true'
      - '--entrypoints.websecure.http3'

      # Logs
      - '--accesslog.filepath=/logs/access.log'
      - '--accesslog.format=json'
      - '--log.filepath=/logs/traefik.log'
      - '--log.format=json'
      - '--log.level=${TRAEFIK_LOG_LEVEL:-INFO}'
      - '--metrics.prometheus.addrouterslabels'

      # Misc
      - '--api.dashboard=true'
      - '--entrypoints.websecure.http.middlewares=compress@file,headers@file${TRAEFIK_PLUGINS:-}'
      - '--global.checknewversion=${TRAEFIK_CHECK_NEW_VERSION:-true}'
      - '--global.sendanonymoususage=${TRAEFIK_SEND_ANONYMOUS_USAGE:-false}'
      - '--ping'
      - '--providers.file.directory=/dynamic_conf/'
      - '--providers.file.watch=true'
    environment:
      - 'TZ=${TZ:-Europe/Paris}'
      - 'GOOGLE_DOMAINS_ACCESS_TOKEN=${GOOGLE_DOMAINS_ACCESS_TOKEN:-}'
    healthcheck:
      test: ['CMD', 'traefik', 'healthcheck', '--ping']
    labels:
      traefik.enable: true
      # Basic Auth Middleware definitions
      traefik.http.middlewares.basic_auth.basicauth.removeHeader: true
      traefik.http.middlewares.basic_auth.basicauth.users: ${USERS}
      traefik.http.routers.traefik.middlewares: basic_auth@docker
      traefik.http.routers.traefik.rule: Host(`${DOMAIN_NAME:-localhost}`)
      traefik.http.routers.traefik.tls.certresolver: letsencryptresolver
      traefik.http.routers.traefik.tls.domains[0].main: '${DOMAIN_NAME:-localhost}'
      traefik.http.routers.traefik.tls.domains[0].sans: '*.${DOMAIN_NAME:-localhost}'
      traefik.http.routers.traefik.service: api@internal
    networks:
      - proxy-network
    ports:
      - '${TRAEFIK_WEB_ENTRYPOINT:-80}:${TRAEFIK_WEB_ENTRYPOINT:-80}'
      - '${TRAEFIK_WEBSECURE_ENTRYPOINT:-443}:${TRAEFIK_WEBSECURE_ENTRYPOINT:-443}'
      - '${TRAEFIK_MQTT_ENTRYPOINT:-1883}:${TRAEFIK_MQTT_ENTRYPOINT:-1883}'
      - '${TRAEFIK_WEBSOCKET_ENTRYPOINT:-9001}:${TRAEFIK_WEBSOCKET_ENTRYPOINT:-9001}'
    restart: unless-stopped
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
      - './traefik/.logs:/logs'
      - './traefik/.config:/dynamic_conf'
      - './traefik/.data/letsencrypt:/letsencrypt'
    depends_on:
      - gitea
      - mqtt
      - whoami

  whoami:
    image: traefik/whoami
    container_name: "traefik-whoami"
    labels:
      traefik.enable: true
      traefik.http.routers.whoami.rule: Host(`whoami.${DOMAIN_NAME:-localhost}`)
      traefik.http.routers.whoami.entrypoints: websecure
      traefik.http.routers.whoami.tls.certresolver: letsencryptresolver
