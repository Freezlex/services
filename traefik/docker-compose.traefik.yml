services:
  traefik:
    container_name: traefik
    image: "traefik:${TRAEFIK_IMAGE_VERSION:-latest}"
    command:
      # Provider
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=${TRAEFIK_EXPOSED_BY_DEFAULT:-false}"
      - "--providers.docker.network=proxy-network"

      # Entrypoints
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.matrix-federation.address=:8448"
      - "--entrypoints.teamspeak-tcp.address=:30033/tcp"
      - "--entrypoints.teamspeak-udp.address=:9987/udp"
      # Let's Encrypt
      - "--certificatesresolvers.letsencryptresolver.acme.dnschallenge=true"
      - "--certificatesresolvers.letsencryptresolver.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.letsencryptresolver.acme.email=${ROOT_EMAIL:-changeme@changeme.org}"
      - "--certificatesresolvers.letsencryptresolver.acme.storage=/letsencrypt/acme.json"
      # Prod : acme-v02.api.letsencrypt.org/directory
      # Staging : acme-staging-v02.api.letsencrypt.org/directory
      - "--certificatesresolvers.letsencryptresolver.acme.caserver=https://acme-v02.api.letsencrypt.org/directory"
      - "--entrypoints.websecure.http.tls.certresolver=letsencryptresolver"

      # HTTP -> HTTPS
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"

      # Logs
      - "--accesslog.filepath=/logs/access.log"
      - "--accesslog.format=json"
      - "--log.filepath=/logs/traefik.log"
      - "--log.format=json"
      - "--log.level=${TRAEFIK_LOG_LEVEL:-INFO}"
      - "--metrics.prometheus.addrouterslabels"

      # Misc
      - "--api.dashboard=true"
      - "--entrypoints.websecure.http.middlewares=compress@file,headers@file${TRAEFIK_PLUGINS:-}"
      - "--global.checknewversion=${TRAEFIK_CHECK_NEW_VERSION:-true}"
      - "--global.sendanonymoususage=${TRAEFIK_SEND_ANONYMOUS_USAGE:-false}"
      - "--ping"
      - "--providers.file.directory=/dynamic_conf/"
      - "--providers.file.watch=true"
      - "--entrypoints.matrix-federation.forwardedHeaders.insecure=true"
    environment:
      - "TZ=${TZ:-Europe/Paris}"
      - "CF_API_EMAIL=${CF_API_EMAIL:-}"
      - "CF_API_KEY=${CF_API_KEY:-}"
    healthcheck:
      test: ["CMD", "traefik", "healthcheck", "--ping"]
    labels:
      traefik.enable: true
      # Basic Auth Middleware definitions
      traefik.http.middlewares.basic_auth.basicauth.removeHeader: true
      traefik.http.middlewares.basic_auth.basicauth.users: ${USERS}
      traefik.http.routers.traefik.middlewares: basic_auth@docker
      traefik.http.routers.traefik.rule: Host(`dashboard.${DOMAIN_NAME:-localhost}`)
      traefik.http.routers.traefik.tls.certresolver: letsencryptresolver
      traefik.http.routers.traefik.tls.domains[0].main: "${DOMAIN_NAME:-localhost}"
      traefik.http.routers.traefik.tls.domains[0].sans: "*.${DOMAIN_NAME:-localhost}"
      traefik.http.routers.traefik.service: api@internal
    networks:
      - proxy-network
    ports:
      - 80:80
      - 443:443
      - 8448:8448
      - 30033:30033/tcp
      - 9987:9987/udp
    restart: unless-stopped
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik/.logs:/logs"
      - "./traefik/.config:/dynamic_conf"
      - "./traefik/.data/letsencrypt:/letsencrypt"
    depends_on:
      - gitea
      - whoami

  whoami:
    image: traefik/whoami
    container_name: "traefik-whoami"
    labels:
      traefik.enable: true
      traefik.http.routers.whoami.rule: Host(`whoami.${DOMAIN_NAME:-localhost}`)
      traefik.http.routers.whoami.entrypoints: websecure
      traefik.http.routers.whoami.tls.certresolver: letsencryptresolver
    networks:
      - proxy-network
